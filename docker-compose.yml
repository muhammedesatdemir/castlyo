

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: castlyo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: castlyo
      POSTGRES_USER: castlyo
      POSTGRES_PASSWORD: castlyo_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    networks:
      - castlyo-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: castlyo-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - castlyo-network

  # Meilisearch
  meilisearch:
    image: getmeili/meilisearch:v1.5
    container_name: castlyo-search
    restart: unless-stopped
    ports:
      - "7700:7700"
    environment:
      MEILI_ENV: development
      MEILI_MASTER_KEY: castlyo_search_master_key
    volumes:
      - meilisearch_data:/meili_data
    networks:
      - castlyo-network

  # MinIO (S3-compatible object storage)
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_API_CORS_ALLOW_ORIGIN: http://localhost:3000,http://127.0.0.1:3000
    volumes:
      - ./storage/minio:/data
    ports:
      - "9000:9000" # API
      - "9001:9001" # Console UI
    networks:
      - castlyo-network

  # API Backend (Development)
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: castlyo-api
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://castlyo:castlyo_password@postgres:5432/castlyo
      DB_SYNC: true
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: dev-jwt-secret-change-in-production
      JWT_REFRESH_SECRET: dev-refresh-secret-change-in-production
      ENABLE_EMAIL_VERIFICATION: false

      # === önemli kısım: API'nin gerçekten okuduğu değişken adları ===
      STORAGE_DRIVER: s3
      S3_ACCESS_KEY: minioadmin          # <— EKSİKTİ
      S3_SECRET_KEY: minioadmin          # <— EKSİKTİ
      S3_REGION: us-east-1               # <— EKSİKTİ
      S3_ENDPOINT: http://minio:9000     # mevcuttu, doğru
      S3_BUCKET: castlyo-dev             # <— ekle
      BUCKET: castlyo-dev                # <— ekle (bazı kod yolları bunu okuyor)

      # opsiyonel ama faydalı
      S3_FORCE_PATH_STYLE: "true"
      CDN_URL: http://localhost:9000
      UPLOAD_PUBLIC_ENDPOINT: http://localhost:9000
      S3_PUBLIC_URL: http://localhost:9000

      # === AWS_* ve alternatif bucket adı alias'ları ===
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_REGION: us-east-1
      S3_BUCKET_NAME: castlyo-dev

    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
      - meilisearch
      - minio
    networks:
      - castlyo-network
    command: npm run dev --workspace=@castlyo/api 

  # Frontend Web App (Development)
  web:
    build:
      context: .
      dockerfile: Dockerfile.web.simple
    container_name: castlyo-web
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development

      # FE'nin kendi içindeki /api/proxy route'u, istekleri buraya forward eder:
      API_PROXY_TARGET: http://api:3001          # web konteynerinden api'ye gidiş

      # Browser tarafında kullanılacak public base; FE her şeyi buraya vuracak:
      NEXT_PUBLIC_API_URL: http://localhost:3000/api/proxy/api/v1
      NEXT_PUBLIC_WEB_API_BASE_URL: http://localhost:3000/api/proxy
      NEXT_PUBLIC_WEB_API_PREFIX: /api/v1

      # SSR/edge kodu doğrudan API'ye gidecekse:
      INTERNAL_API_URL: http://api:3001
      API_INTERNAL_URL: http://api:3001

      # S3 public URL (görüntüleme için) — FE upload sonrası link üretirken kullanır:
      NEXT_PUBLIC_S3_PUBLIC_URL: http://localhost:9000
      NEXT_PUBLIC_S3_BUCKET: castlyo-dev

      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: dev-very-long-secret-1234567890!@#-castlyo-nextauth-secret-key
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/web/node_modules
      - /app/packages/ui/node_modules
      - /app/packages/types/node_modules
      - /app/packages/database/node_modules
    depends_on:
      - api
    networks:
      - castlyo-network



  # Mailhog (Email testing in development)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: castlyo-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port
    networks:
      - castlyo-network

volumes:
  postgres_data:
  redis_data:
  meilisearch_data:

networks:
  castlyo-network:
    driver: bridge
